UI自动化特殊处理--获取元素属性--爬取页面源码--常用断言
1、获取元素属性
获取title:driver.title()
获取元素文本:driver.find_xx.text
获取元素标签:driver.find_xx.tag_name
获取元素的其他属性的值:driver.find_xx().get_attribute("class")
获取文本框输入的值:driver.find_xx().get_attribute("value")
获取浏览器的名称:driver.name

2、爬取页面源码
爬取页面源码:driver.page_source
1)导入re模块
2)非贪婪匹配，re.S('.'匹配字符,包括换行符)
3)findall方法返回的是一个list集合
```
from selenium import webdriver
import re<br>
driver = webdriver.Firefox()<br>
driver.get("https://www.baidu.com/")
page = driver.page_source<br>
url_list = re.findall('href=\"(.*?)\"',page,re.S)
url_all = []
for url in url_list:
    if "http" in url:
        url_all.append(url)
```
3、常用断言
assertEqual(self,first,second,msg=None)
--判断两个参数相等：first == second

assertNotEqual(self, first, second, msg=None)
--判断两个参数不相等：first ！= second

assertIn(self, member, container, msg=None)
--判断是字符串是否包含：member in container

assertNotIn(self, member, container, msg=None)
--判断是字符串是否不包含：member not in container

assertTrue(self, expr, msg=None)
--判断是否为真：expr is True

assertFalse(self, expr, msg=None)
--判断是否为假：expr is False

assertIsNone(self, obj, msg=None)
--判断是否为 None：obj is None

assertIsNotNone(self, obj, msg=None)
--判断是否不为 None：obj is not None

forexample:
        element2 = driver.find_element_by_xpath("//div[@role='alert']/p")
        info2 = element2.text
        assertion = Assert.Assertions()
        assertion.assert_in_text(info2,"发货成功")
4、ExpectedCondition用法说明
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

titleIs( String title)
--判断当前页面的title是否精确等于预期

titleContains( String title)
--判断当前页面的title是否包含预期字符串

urlToBe( String url)
--判断当前页面的url是否精确等于预期

urlContains( String fraction)
--判断当前页面的url是否包含预期字符串

urlMatches( String regex)
--字符串正则表达式

presenceOfElementsLocated( By locator)
--判断元素是否出现，必须所有符合条件的元素都加载出来，才通过。

presenceOfElementLocated( By locator)
--判断元素是否出现，只要有一个元素出现，就通过。（代表在不代表可见）
判断是否至少有 1 个元素存在于 dom 树中。
举个例子，如果页面上有 n 个元素的 class 都是’column-md-3’，那么只要有 1 个元素存在，这个方法就返回 True。

elementIfVisible(WebElement element)
--如果给定元素是可见的且具有非零大小，否则为null

presenceOfAllElementsLocatedBy( By locator)
--判断元素是否出现。

visibilityOfElementLocated( By locator)
--判断某个元素是否可见. 可见代表元素非隐藏，并且元素宽和高都不等于 0

visibilityOfAllElementsLocatedBy( By locator)
--判断某组元素是否可见

visibilityOfAllElements(final List<WebElement> elements)
--判断某个元素是否可见. 可见代表元素非隐藏，并且元素宽和高都不等于 0

textToBePresentInElement( WebElement element,  String text)
--判断某个元素中的text是否包含了预期的字符串；

textToBePresentInElement(By locator, String text)
--判断某个元素中的 text 是否 包含 了预期的字符串

textToBePresentInElementLocated(final By locator, final String text)
--判断某个元素中的 text 是否 包含 了预期的字符串










